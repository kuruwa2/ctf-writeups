#!/usr/bin/env python3

from Crypto.Util.number import *
import gmpy2

n = 94144887513744538681657844856583985690903055376400570170371837200724227314957348031684706936655253125445176582486308241015430205703156336248578475428712275706238423997982248462635972817633320331030484841129628650918661036694615254018290264619628335177
c = 80250313885079761377138486357617323555591919111371649902793873860183455237161293320577683249054725852540874552433031133240624696119120378419135912301004715004977978507247634217071922495893934816945961054193052791946557226599493364850793396744903765857

for i in range(417):
    r = gmpy2.iroot(2**(2*i) + 4*n, 2)
    if r[1]:
        p = (-2**i + r[0])//2
        q = p + 2**i
        assert p * q == n
        break

print(long_to_bytes(pow(c, inverse(65537, (p-1)*(q-1)), n)))
#CCTF{5pArs3_dIfFeRenc3_f4ct0r1za7iOn_m3th0d!}
