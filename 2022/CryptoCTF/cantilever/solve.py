#!/usr/bin/env python3

from Crypto.Util.number import *

n = 7069789930583271525053215046247773438899869283661158227309691853515987055334306019600324056376312479212090202373516405860759222837585952590589336295698718699890424169542280710721069784487366121478569760563045886361884895363592898476736269784284754788133722060718026577238640218755539268465317292713320841554802703379684173485217045274942603346947299152498798736808975912326592689302969859834957202716983626393365387411319175917999258829839695189774082810459527737342402920881184864625678296442001837072332161966439361793009893108796934406114288057583563496587655548536011677451960307597573257032154009427010069578913
c_1 = 488692928085934899944055554857568564903346089951134051486941368561567330884363274156339625953702601270565654444836193796061118053575538224794730472032345171432952984560662218697488844007827176184413713651118743456250147472678673801728916283759932987216388378211555067885210167894310696549664382751443669387953644382833924884208966436685137553434532738845959014828804809425096115758364136546390809453200055265653531950423111482644330073443545410319576097902472017235065047191133112557289289189187696092145850680765843608118584107829268136014912479701945735063525799796920293418182776436767911172221104640501952880057
c_2 = 109770827223661560471527567179288748906402603483328748683689436879660543465776899146036833470531024202351087008847594392666852763100570391337823820240726499421306887565697452868723849092658743267256316770223643723095601213088336064635680075206929620159782416078143076506249031972043819429093074684182845530529249907297736582589125917235222921623698038868900282049587768700860009877737045693722732170123306528145661683416808514556360429554775212088169626620488741903267154641722293484797745665402402381445609873333905772582972140944493849645600529147490903067975300304532955461710562911203871840101407995813072692212

def bsgs(a, b, p, order):
    m = math.ceil(math.sqrt(order))
    dic = {}
    ai = 1
    for i in range(m):
        dic[ai] = i
        ai = ai * a % p
    bi = b
    am = inverse(pow(a, m, p), p)
    for i in range(m):
        if bi in dic:
            assert(pow(a, i*m+dic[bi], p)==b)
            return i * m + dic[bi]
        bi = bi * am % p

def crt(rs, ps):
    a1, n1 = rs[0], ps[0]
    for i in range(1, len(ps)):
        a2, n2 = rs[i], ps[i]
        m1, m2 = inverse(n1, n2), inverse(n2, n1)
        a1 = (a1 * m2 * n2 + a2 * m1 * n1) % (n1 * n2)
        n1 *= n2
    return a1

'''a = 2
i = 2
while True:
    if GCD(a-1, n) > 1:
        p = GCD(a-1, n)
        break
    a = pow(a, i, n)
    i += 1'''

p = 83408372012221120677052349409462320990177094246143674474872152829440524098582262384066400107950985845255268335597502228206679771838750219696329523257176739436871327238322817403970284015587320158034304282786944710043150568360761457471641695390427267786485448748458445872307883254297662715749746270343116946519
q = n//p
e = 0x10001
m_1 = pow(c_1, inverse(e, (p-1)*(q-1)), n)

factors = (2, 168193, 174821, 268517, 276347, 277363, 288427, 290803, 298579, 307687, 313669, 319441, 330329, 339799, 340237, 352097, 352691, 360089, 366697, 367121, 368323, 371447, 379579, 383729, 384577, 385709, 385859, 395719, 405401, 421019, 421303, 422893, 424889, 434947, 444253, 446003, 447311, 448057, 467813, 479189, 482917, 486139, 488627, 490151, 491731, 502237, 505319, 505339, 508789, 509909, 511289, 512047, 513529, 515087, 515803, 523261)
rs = []
for i in factors:
    rs.append(bsgs(pow(e, p//i, p), pow(c_2, p//i, p), p, i))
m_2 = crt(rs, factors)

print(long_to_bytes(m_1) + long_to_bytes(m_2))
#CCTF{5L3Ek_4s__s1lK__Ri9H7?!}
