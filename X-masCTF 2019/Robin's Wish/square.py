mod=17150948086006853589591993610767711903029749167719666894975279147137565458158322238156960171902445590052801235253045792984069360111140927413022122124794074712372666903008787076313652986830735891457266804676322092444602549744787142273336096470832931113698218899620404912992099097015038863714351384075897287966440984446042594077540591489657561322101444523900312965276873402643875552954061610698504308548301539759131150366661281651087532807818489741520557925049746199503634928208501195328273501508911193754334803125090416259379171809642283452935819219835361791073290320084884025929676790915171638558685021113076310785793
ans=5246714854725113346502630730554686769362460460024400516326377174582640581617340710826138679480295436331234207963461529282935208997428624889011546696260124285562972903578214766887742626982299066940742233276099045101758754159876941858460523496511762589246629169421146451313958152520373812386003438537883174073207043740529956867073333127369639805390764236392611481831378501794578225519437884851468056175989860754859991595520574160634748280117377466913600749771441057921368040518728100659821105472644679642632075853735222383344108215588801856832216683298621306263529594333455011123877122301231151688000552994875142333423
p=130961628296256509203688558167635593723553913356760543890382119434581162340507411906149081831530791465121490809254472572128660282537887134954728668333303763155790295871693652007851065436374283916442512241694633008063722724742602750333491782821019252639698534922880498906462617380877186177574727639637556922883
q=130961628296256509203688558167635593723553913356760543890382119434581162340507411906149081831530791465121490809254472572128660282537887134954728668333303763155790295871693652007851065436374283916442512241694633008063722724742602750333491782821019252639698534922880498906462617380877186177574727639637556921771
pa=5990676779435367427127928852296540828603353667599803377626444781722492253438317801579994227533042221215407010319876993938548522219831287319489569374134261049506768452956226851651380148720616622026595238889581528694174596388910088265276537990885416277592083964768231591591566191215923564259438940221767029405
qa=5990676779099577854286865425922598851042083608760197352972834873014473123326416267563117594255188023672972503172796708375806370866618693972232095046533455557055354578455820287044043420740386434478754334824926664301228577397729127367435459006285322009443933815228705474453010190636954048010879514754710496565
pa2=p-pa
qa2=q-qa
def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

mp, mq = egcd(p,q)[1:]

m1 = (pa*mq*q+qa*mp*p)% mod
m2 = (pa2*mq*q+qa*mp*p)% mod
m3 = (pa*mq*q+qa2*mp*p)% mod
m4 = (pa2*mq*q+qa2*mp*p)% mod

import codecs

print(codecs.decode(hex(m1)[2:], 'hex'))
print(codecs.decode(hex(m2)[2:], 'hex'))
print(codecs.decode(hex(m3)[2:], 'hex'))
print(codecs.decode(hex(m4)[2:], 'hex'))
